const { transporter } = require("../../config/mailer");

module.exports = {
  verifyMail: async (token, to) => {
    try {
      const url = `${process.env.ACTIVE_URL}/registro/verificacion/${token}`;
      const info = await transporter.sendMail({
        from: `"EventosEC ðŸ“©" <${process.env.MAIL}>`,
        to,
        subject: "VerificaciÃ³n de email âœ”",
        html: `<p>Verifica tu email dando click en el siguiente <a href="${url}">enlace</a></p>`,
      });
      return info;
    } catch (error) {
      throw new Error("No se pudo enviar el correo de verificacion");
    }
  },
  resetPassword: async (token, to) => {
    try {
      const url = `${process.env.ACTIVE_URL}/recuperar-cuenta/${token}`;
      const info = await transporter.sendMail({
        from: `"EventosEC ðŸ“©" <${process.env.MAIL}>`,
        to,
        subject: "RecuperaciÃ³n de cuenta âœ”",
        html: `<p>Parece que has olvidado tu contraseÃ±a, puedes restablecerla desde el siguiente <a href="${url}">enlace</a></p>`,
      });
      return info;
    } catch (error) {
      throw new Error(
        "No se pudo enviar el correo de restablecimiento de contraseÃ±a"
      );
    }
  },
  responseContactForm: async (name, surname, to) => {
    try {
      const info = await transporter.sendMail({
        from: `"EventosEC ðŸ“©" <${process.env.MAIL}>`,
        to,
        subject: "Solicitud de evento",
        html: `<h3>Hola ${name} ${surname},</h3>
            <p>Â¡Muchas gracias por enviar el formulario!</p>
            <p>Muy pronto nos pondremos en contacto contigo para coordinar mas acerca de tu evento.</p>
        `,
      });
      return info;
    } catch (error) {
      throw new Error(
        "No se pudo enviar el correo de respuesta a la solicitud del evento"
      );
    }
  },
};
